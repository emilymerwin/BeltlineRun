#! /usr/bin/env python
#this script will open all of the files in a directory, assume they are images, and extract metadata for storymap.js

import os.path
import json
import decimal
#https://github.com/python-imaging/Pillow
from PIL import Image
from PIL.ExifTags import TAGS
import operator

directory = '../img/resized/' #where to find the images

#create slides array and add Ben's run line
geoJ = {
	"type": "FeatureCollection",
	"features": [{
		"type":"Feature","properties":{"prop0":"value0","prop1":0},"geometry":{"type":"LineString","coordinates":[[-84.36510918661952,33.775682989507914],[-84.3639777135104,33.77118970267475],[-84.36281296424568,33.76951960846782],[-84.36001324094832,33.766612680628896],[-84.35957109555602,33.76555630937219],[-84.3594597838819,33.764077154919505],[-84.36068588867784,33.761977404356],[-84.36335812322795,33.760062642395496],[-84.36428206041455,33.75905681401491],[-84.36478044837713,33.75802609138191],[-84.365543872118,33.75441072508693],[-84.36625650152564,33.7531619053334],[-84.36612540856004,33.75302410684526],[-84.36377311125398,33.753531128168106],[-84.36341646127403,33.75211517326534],[-84.3613195605576,33.75260149128735],[-84.35697169974446,33.75236394815147],[-84.3581407237798,33.74676584266126],[-84.3581024184823,33.74071209691465],[-84.35846334323287,33.738476894795895],[-84.3602143228054,33.733417661860585],[-84.36153841204941,33.730669654905796],[-84.363001473248,33.728923201560974],[-84.36507708393037,33.727450501173735],[-84.36769165098667,33.72636127285659],[-84.37416172586381,33.724464029073715],[-84.38034153543413,33.72419832274318],[-84.38105382956564,33.724318351596594],[-84.38307344913483,33.72400059364736],[-84.38757620751858,33.721916265785694],[-84.38731687143445,33.72198399156332],[-84.38754946924746,33.72205096296966],[-84.39000712707639,33.720669792965055],[-84.39336466602981,33.719487860798836],[-84.39538009464741,33.71940680779517],[-84.39845340326428,33.72007945552468],[-84.39835868775845,33.71982581913471],[-84.3994614109397,33.71973596513271],[-84.40010983496904,33.719455087557435],[-84.39957381226122,33.71864330023527],[-84.40023413859308,33.718324955552816],[-84.40174707211554,33.719130204990506],[-84.40257637761533,33.718788558617234],[-84.40110309049487,33.717032885178924],[-84.40165000967681,33.71678209863603],[-84.40115539357066,33.717064652591944],[-84.40256020054221,33.718772968277335],[-84.4015968684107,33.71915224939585],[-84.40014520660043,33.71831280179322],[-84.39954061992466,33.71861765161157],[-84.40004378557205,33.7194066401571],[-84.39926778897643,33.719772677868605],[-84.39839079044759,33.719849875196815],[-84.39844384789467,33.720098566263914],[-84.40797516144812,33.72038975358009],[-84.41066030412912,33.721110513433814],[-84.41230282187462,33.72304287739098],[-84.41291838884354,33.724578861147165],[-84.41450994461775,33.72653259895742],[-84.41438631154597,33.72644140385091],[-84.41410819999874,33.72589289210737],[-84.41398188471794,33.726059356704354],[-84.41448027268052,33.726496724411845],[-84.4204287417233,33.7301704287529],[-84.4214890524745,33.73114222660661],[-84.4240224827081,33.73257896862924],[-84.42572040483356,33.73326829634607],[-84.42995812743902,33.73578513041139],[-84.43125430494547,33.73674485832453],[-84.43169930018485,33.73778781853616],[-84.43219684995711,33.73831696808338],[-84.43311877548695,33.73900981619954],[-84.4328620377928,33.73882172629237],[-84.43332212045789,33.73893463052809],[-84.43383207544684,33.73987114056945],[-84.43410255946219,33.741266978904605],[-84.4339588098228,33.742916034534574],[-84.4335808698088,33.74404524452984],[-84.43060906603932,33.74668596312404],[-84.43060051649809,33.74697932973504],[-84.4300336483866,33.74735358171165],[-84.43013146519661,33.74750613234937],[-84.4287674780935,33.74831683002412],[-84.42676277831197,33.75111462548375],[-84.42457426339388,33.758396822959185],[-84.42418525926769,33.760586846619844],[-84.42452263087034,33.76248400658369],[-84.42397286184132,33.762690369039774],[-84.42411443218589,33.76339855603874],[-84.42446286790073,33.76361011527479],[-84.42894618026912,33.76359410583973],[-84.43052683956921,33.76470202580094],[-84.42901901900768,33.765441393479705],[-84.42720173858106,33.76560132019222],[-84.42648307420313,33.76588496379554],[-84.42570121027529,33.76650933176279],[-84.42531991750002,33.767567882314324],[-84.426593715325,33.77491713501513],[-84.42647888325155,33.775461707264185],[-84.42616137675941,33.77569640055299],[-84.42636991851032,33.7770236749202],[-84.42714381963015,33.77834432758391],[-84.42938354797661,33.78035908564925],[-84.42982711829245,33.78135049715638],[-84.42957490682602,33.78291506320238],[-84.42796432413161,33.78514121286571],[-84.42807840183377,33.78730139695108],[-84.42777003161609,33.786714328452945],[-84.42813321948051,33.78865842707455],[-84.4292854797095,33.79064896143973],[-84.42781504243612,33.79181865602732],[-84.42725328728557,33.792683919891715],[-84.42625123076141,33.79282968118787],[-84.42646362818778,33.793292697519064],[-84.42538739182055,33.7931062001735],[-84.42468884401023,33.793716821819544],[-84.42413731478155,33.79352496005595],[-84.42433135583997,33.793914215639234],[-84.42398082464933,33.79465282894671],[-84.42415089346468,33.79366250708699],[-84.42314640618861,33.793369475752115],[-84.42296443507075,33.79303629510105],[-84.42238767631352,33.79296789877117],[-84.42230922169983,33.79315531812608],[-84.42225934937596,33.79281249828637],[-84.42100156098604,33.792742090299726],[-84.42047324962914,33.792115207761526],[-84.41875462420285,33.792127361521125],[-84.41875797696412,33.791726706549525],[-84.4181492831558,33.791859559714794],[-84.41790671087801,33.79215753637254],[-84.41755844280124,33.7920596357435],[-84.41689166240394,33.79366736859083],[-84.41597811877728,33.79464067518711],[-84.41075937822461,33.79693513736129],[-84.40729044377804,33.79902667365968],[-84.40433791838586,33.80156873725355],[-84.40459046512842,33.80183855071664],[-84.40407749265432,33.801991771906614],[-84.40048886463046,33.80657625384629],[-84.4005700852722,33.80637022666633],[-84.40019206143916,33.80613033659756],[-84.4010722450912,33.80657717585564],[-84.40130794420838,33.80718603730202],[-84.40199886448681,33.807342778891325],[-84.40309261903167,33.80944940261543],[-84.40304744057357,33.81017862819135],[-84.40235869958997,33.81064038723707],[-84.40132579766214,33.81094699725509],[-84.40233464352787,33.81157069467008],[-84.40188855864108,33.812690349295735],[-84.40041879191995,33.813181361183524],[-84.39792391844094,33.81297457963228],[-84.39697114750743,33.81388686597347],[-84.39406572841108,33.81407151930034],[-84.39252194948494,33.8137212395668],[-84.39256922341883,33.81250846199691],[-84.3930194992572,33.811731208115816],[-84.3928405456245,33.811570946127176],[-84.38567217439413,33.811941258609295],[-84.38456282950938,33.812128342688084],[-84.37829677015543,33.81450821645558],[-84.37812368385494,33.814258854836226],[-84.37863992527127,33.81335595622659],[-84.37869373708963,33.812437718734145],[-84.37716663815081,33.812478203326464],[-84.37633641064167,33.81328328512609],[-84.3759656790644,33.81336400285363],[-84.37205384485424,33.81203354336321],[-84.37261794693768,33.81142149679363],[-84.3754733260721,33.81064843386412],[-84.3769411649555,33.80969046615064],[-84.37798655591905,33.80960497073829],[-84.38082559034228,33.807264575734735],[-84.37886883504689,33.80723456852138],[-84.37763568945229,33.80675260908902],[-84.37702649272978,33.80623368546367],[-84.37308188527822,33.798974957317114],[-84.37084442004561,33.795396303758025],[-84.37005065381527,33.79241016693413],[-84.37065783888102,33.785563157871366],[-84.37041124328971,33.78455531783402],[-84.36859949491918,33.78221441991627]]}
	}]
}

def get_field (exif,field) :
	for (k,v) in exif.iteritems():
		if TAGS.get(k) == field:
			return v

files = [os.path.join(directory, f) for f in os.listdir(directory) if not f.startswith('.') #search directory for files, exclude hidden files
	if os.path.isfile(os.path.join(directory, f))] #Get only files, not directories, join the string

for f in files:
	#parse keys
	# for (key ,val) in Image.open(f)._getexif().iteritems():
	# 	print '%s = %s' % (TAGS.get(key), val)

	exif = Image.open(f)._getexif()
	GPS = get_field(exif, 'GPSInfo')
	lat = float(decimal.Decimal(GPS[2][0][0]/GPS[2][0][1]) + decimal.Decimal(GPS[2][1][0]/GPS[2][1][1])/60 + decimal.Decimal(GPS[2][2][0]/GPS[2][2][1])/3600) #convert to decimal format
	lon = -1*float(decimal.Decimal(GPS[4][0][0]/GPS[4][0][1]) + decimal.Decimal(GPS[4][1][0]/GPS[4][1][1])/60 + decimal.Decimal(GPS[4][2][0]/GPS[4][2][1])/3600) #convert to decimal format, make negative for Western lons (all of ours)

	#store the image properties we want for the JSON
	geoJ["features"].append({"type": "Feature", "geometry": {"type": "Point", "coordinates": [lon, lat]}, "properties": {"date": get_field(exif, "DateTimeOriginal"), "image": f.strip("../") }})

#turn tree object into JSON and pretty print it
out = json.dumps(geoJ, indent=4, separators=(',', ': '))
print "JSON parsed!"

# Save the JSON
f = open( '../data/map.geojson', 'w')
f.write(out)
print "JSON saved!"